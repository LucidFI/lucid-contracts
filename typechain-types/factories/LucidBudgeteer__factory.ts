/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LucidBudgeteer,
  LucidBudgeteerInterface,
} from "../LucidBudgeteer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_lucidTxERC721",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "NotCreditorOrDebtor",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "lucidManager",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "lucidTxERC721",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "lucidBudgeteer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blocktime",
        type: "uint256",
      },
    ],
    name: "LucidBudgeteerCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "lucidManager",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "updatedBy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "tag",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blocktime",
        type: "uint256",
      },
    ],
    name: "LucidTagUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "relayerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
    ],
    name: "MetaTransactionExecuted",
    type: "event",
  },
  {
    inputs: [],
    name: "ERC712_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "claimAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "creditor",
            type: "address",
          },
          {
            internalType: "address",
            name: "debtor",
            type: "address",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "proposal",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "dueBy",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "claimToken",
            type: "address",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "hash",
                type: "bytes32",
              },
              {
                internalType: "uint8",
                name: "hashFunction",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "size",
                type: "uint8",
              },
            ],
            internalType: "struct Multihash",
            name: "attachment",
            type: "tuple",
          },
        ],
        internalType: "struct LucidBudgeteer.ClaimParams",
        name: "claim",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "lucidTag",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "_tokenUri",
        type: "string",
      },
    ],
    name: "createLucidTx",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "sigR",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sigS",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "sigV",
        type: "uint8",
      },
    ],
    name: "executeMetaTransaction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDomainSeperator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lucidTxERC721",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "newTag",
        type: "bytes32",
      },
    ],
    name: "updateLucidTag",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

type LucidBudgeteerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LucidBudgeteerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LucidBudgeteer__factory extends ContractFactory {
  constructor(...args: LucidBudgeteerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "LucidBudgeteer";
  }

  deploy(
    _lucidTxERC721: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LucidBudgeteer> {
    return super.deploy(
      _lucidTxERC721,
      overrides || {}
    ) as Promise<LucidBudgeteer>;
  }
  getDeployTransaction(
    _lucidTxERC721: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_lucidTxERC721, overrides || {});
  }
  attach(address: string): LucidBudgeteer {
    return super.attach(address) as LucidBudgeteer;
  }
  connect(signer: Signer): LucidBudgeteer__factory {
    return super.connect(signer) as LucidBudgeteer__factory;
  }
  static readonly contractName: "LucidBudgeteer";
  public readonly contractName: "LucidBudgeteer";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LucidBudgeteerInterface {
    return new utils.Interface(_abi) as LucidBudgeteerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LucidBudgeteer {
    return new Contract(address, _abi, signerOrProvider) as LucidBudgeteer;
  }
}
