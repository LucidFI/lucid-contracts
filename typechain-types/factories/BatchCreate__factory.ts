/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BatchCreate, BatchCreateInterface } from "../BatchCreate";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_lucidBudgeteer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lucidTx",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_maxOperations",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BatchFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "BatchTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroLength",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "relayerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
    ],
    name: "MetaTransactionExecuted",
    type: "event",
  },
  {
    inputs: [],
    name: "ERC712_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "proposal",
            type: "string",
          },
          {
            internalType: "string",
            name: "tokenURI",
            type: "string",
          },
          {
            internalType: "address",
            name: "creditor",
            type: "address",
          },
          {
            internalType: "address",
            name: "debtor",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "claimAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dueBy",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "claimToken",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "tag",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "hash",
                type: "bytes32",
              },
              {
                internalType: "uint8",
                name: "hashFunction",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "size",
                type: "uint8",
              },
            ],
            internalType: "struct Multihash",
            name: "attachment",
            type: "tuple",
          },
        ],
        internalType: "struct BatchCreate.CreateClaimParams[]",
        name: "claims",
        type: "tuple[]",
      },
    ],
    name: "batchCreate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "sigR",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sigS",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "sigV",
        type: "uint8",
      },
    ],
    name: "executeMetaTransaction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDomainSeperator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lucidBudgeteer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lucidTxERC721",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxOperations",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_maxOperations",
        type: "uint8",
      },
    ],
    name: "updateMaxOperations",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001eae38038062001eae83398181016040528101906200003791906200014c565b81600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460146101000a81548160ff021916908360ff16021790555033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505062000222565b6000815190506200012f81620001ee565b92915050565b600081519050620001468162000208565b92915050565b600080600060608486031215620001685762000167620001e9565b5b600062000178868287016200011e565b93505060206200018b868287016200011e565b92505060406200019e8682870162000135565b9150509250925092565b6000620001b582620001bc565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060ff82169050919050565b600080fd5b620001f981620001a8565b81146200020557600080fd5b50565b6200021381620001dc565b81146200021f57600080fd5b50565b611c7c80620002326000396000f3fe6080604052600436106100a75760003560e01c80633f3269a3116100645780633f3269a3146101c55780636ba0d52d146101f05780638da5cb5b146102195780639028dd3e14610244578063d26df1f11461026f578063f2fde38b14610298576100a7565b80630bd4424c146100ac5780630c53c51c146100d75780630f7e59701461010757806320379ee5146101325780632d0335ab1461015d5780633408e4701461019a575b600080fd5b3480156100b857600080fd5b506100c16102c1565b6040516100ce91906116f0565b60405180910390f35b6100f160048036038101906100ec9190610ff5565b6102d4565b6040516100fe91906115ea565b60405180910390f35b34801561011357600080fd5b5061011c610546565b604051610129919061160c565b60405180910390f35b34801561013e57600080fd5b5061014761057f565b6040516101549190611545565b60405180910390f35b34801561016957600080fd5b50610184600480360381019061017f9190610fc8565b610589565b60405161019191906116d5565b60405180910390f35b3480156101a657600080fd5b506101af6105d2565b6040516101bc91906116d5565b60405180910390f35b3480156101d157600080fd5b506101da6105df565b6040516101e791906114ec565b60405180910390f35b3480156101fc57600080fd5b5061021760048036038101906102129190611106565b610605565b005b34801561022557600080fd5b5061022e6106aa565b60405161023b91906114ec565b60405180910390f35b34801561025057600080fd5b506102596106d0565b60405161026691906114ec565b60405180910390f35b34801561027b57600080fd5b506102966004803603810190610291919061108c565b6106f6565b005b3480156102a457600080fd5b506102bf60048036038101906102ba9190610fc8565b610bd4565b005b600460149054906101000a900460ff1681565b606060006040518060600160405280600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018781525090506103578782878787610c9f565b610396576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038d9061166e565b60405180910390fd5b6103e96001600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610da890919063ffffffff16565b600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f5845892132946850460bff5a0083f71031bc5bf9aadcd40f1de79423eac9b10b87338860405161045f93929190611507565b60405180910390a16000803073ffffffffffffffffffffffffffffffffffffffff16888a60405160200161049492919061148d565b6040516020818303038152906040526040516104b09190611476565b6000604051808303816000865af19150503d80600081146104ed576040519150601f19603f3d011682016040523d82523d6000602084013e6104f2565b606091505b509150915081610537576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052e9061162e565b60405180910390fd5b80935050505095945050505050565b6040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525081565b6000600154905090565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000804690508091505090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461068c576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600460146101000a81548160ff021916908360ff16021790555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b81819050600460149054906101000a900460ff1660ff16811115610746576040517f0b7d62e200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000811415610781576040517fbf55749700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b83839050811015610bce576000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166352029c2760e01b6040518061010001604052808888878181106107f1576107f0611a20565b5b9050602002810190610803919061176e565b60a00135815260200188888781811061081f5761081e611a20565b5b9050602002810190610831919061176e565b60600160208101906108439190610fc8565b73ffffffffffffffffffffffffffffffffffffffff16815260200188888781811061087157610870611a20565b5b9050602002810190610883919061176e565b60800160208101906108959190610fc8565b73ffffffffffffffffffffffffffffffffffffffff1681526020018888878181106108c3576108c2611a20565b5b90506020028101906108d5919061176e565b80600001906108e4919061170b565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200188888781811061093f5761093e611a20565b5b9050602002810190610951919061176e565b8060200190610960919061170b565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020018888878181106109bb576109ba611a20565b5b90506020028101906109cd919061176e565b60c0013581526020018888878181106109e9576109e8611a20565b5b90506020028101906109fb919061176e565b60e0016020810190610a0d9190610fc8565b73ffffffffffffffffffffffffffffffffffffffff168152602001888887818110610a3b57610a3a611a20565b5b9050602002810190610a4d919061176e565b61012001803603810190610a6191906110d9565b815250878786818110610a7757610a76611a20565b5b9050602002810190610a89919061176e565b6101000135888887818110610aa157610aa0611a20565b5b9050602002810190610ab3919061176e565b8060400190610ac2919061170b565b604051602401610ad5949392919061168e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610b3f9190611476565b600060405180830381855af49150503d8060008114610b7a576040519150601f19603f3d011682016040523d82523d6000602084013e610b7f565b606091505b5050905080610bba576040517ff09dd32600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b508080610bc69061197a565b915050610784565b50505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c5b576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415610d10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d079061164e565b60405180910390fd5b6001610d23610d1e87610dbe565b610e26565b83868660405160008152602001604052604051610d4394939291906115a5565b6020604051602081039080840390855afa158015610d65573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614905095945050505050565b60008183610db6919061184c565b905092915050565b6000604051806080016040528060438152602001611c04604391398051906020012082600001518360200151846040015180519060200120604051602001610e099493929190611560565b604051602081830303815290604052805190602001209050919050565b6000610e3061057f565b82604051602001610e429291906114b5565b604051602081830303815290604052805190602001209050919050565b6000610e72610e6d846117bc565b611797565b905082815260208101848484011115610e8e57610e8d611aa1565b5b610e99848285611907565b509392505050565b600081359050610eb081611bbe565b92915050565b60008083601f840112610ecc57610ecb611a83565b5b8235905067ffffffffffffffff811115610ee957610ee8611a7e565b5b602083019150836020820283011115610f0557610f04611a97565b5b9250929050565b600081359050610f1b81611bd5565b92915050565b600082601f830112610f3657610f35611a83565b5b8135610f46848260208601610e5f565b91505092915050565b600060608284031215610f6557610f64611a8d565b5b610f6f6060611797565b90506000610f7f84828501610f0c565b6000830152506020610f9384828501610fb3565b6020830152506040610fa784828501610fb3565b60408301525092915050565b600081359050610fc281611bec565b92915050565b600060208284031215610fde57610fdd611aab565b5b6000610fec84828501610ea1565b91505092915050565b600080600080600060a0868803121561101157611010611aab565b5b600061101f88828901610ea1565b955050602086013567ffffffffffffffff8111156110405761103f611aa6565b5b61104c88828901610f21565b945050604061105d88828901610f0c565b935050606061106e88828901610f0c565b925050608061107f88828901610fb3565b9150509295509295909350565b600080602083850312156110a3576110a2611aab565b5b600083013567ffffffffffffffff8111156110c1576110c0611aa6565b5b6110cd85828601610eb6565b92509250509250929050565b6000606082840312156110ef576110ee611aab565b5b60006110fd84828501610f4f565b91505092915050565b60006020828403121561111c5761111b611aab565b5b600061112a84828501610fb3565b91505092915050565b61113c816118b4565b82525050565b61114b816118a2565b82525050565b61115a816118a2565b82525050565b61117161116c826118a2565b6119c3565b82525050565b611180816118c6565b82525050565b61118f816118c6565b82525050565b6111a66111a1826118c6565b6119d5565b82525050565b60006111b7826117ed565b6111c18185611803565b93506111d1818560208601611916565b6111da81611ab0565b840191505092915050565b60006111f0826117ed565b6111fa8185611814565b935061120a818560208601611916565b80840191505092915050565b60006112228385611830565b935061122f838584611907565b61123883611ab0565b840190509392505050565b600061124e826117f8565b611258818561181f565b9350611268818560208601611916565b61127181611ab0565b840191505092915050565b6000611287826117f8565b6112918185611830565b93506112a1818560208601611916565b6112aa81611ab0565b840191505092915050565b60006112c2601c83611830565b91506112cd82611ace565b602082019050919050565b60006112e5600283611841565b91506112f082611af7565b600282019050919050565b6000611308602583611830565b915061131382611b20565b604082019050919050565b600061132b602183611830565b915061133682611b6f565b604082019050919050565b60006101408301600083015161135a600086018261143a565b50602083015161136d6020860182611142565b5060408301516113806040860182611142565b50606083015184820360608601526113988282611243565b915050608083015184820360808601526113b28282611243565b91505060a08301516113c760a086018261143a565b5060c08301516113da60c0860182611142565b5060e08301516113ed60e08601826113f8565b508091505092915050565b60608201600082015161140e6000850182611177565b5060208201516114216020850182611458565b5060408201516114346040850182611458565b50505050565b611443816118f0565b82525050565b611452816118f0565b82525050565b611461816118fa565b82525050565b611470816118fa565b82525050565b600061148282846111e5565b915081905092915050565b600061149982856111e5565b91506114a58284611160565b6014820191508190509392505050565b60006114c0826112d8565b91506114cc8285611195565b6020820191506114dc8284611195565b6020820191508190509392505050565b60006020820190506115016000830184611151565b92915050565b600060608201905061151c6000830186611151565b6115296020830185611133565b818103604083015261153b81846111ac565b9050949350505050565b600060208201905061155a6000830184611186565b92915050565b60006080820190506115756000830187611186565b6115826020830186611449565b61158f6040830185611151565b61159c6060830184611186565b95945050505050565b60006080820190506115ba6000830187611186565b6115c76020830186611467565b6115d46040830185611186565b6115e16060830184611186565b95945050505050565b6000602082019050818103600083015261160481846111ac565b905092915050565b60006020820190508181036000830152611626818461127c565b905092915050565b60006020820190508181036000830152611647816112b5565b9050919050565b60006020820190508181036000830152611667816112fb565b9050919050565b600060208201905081810360008301526116878161131e565b9050919050565b600060608201905081810360008301526116a88187611341565b90506116b76020830186611186565b81810360408301526116ca818486611216565b905095945050505050565b60006020820190506116ea6000830184611449565b92915050565b60006020820190506117056000830184611467565b92915050565b6000808335600160200384360303811261172857611727611a92565b5b80840192508235915067ffffffffffffffff82111561174a57611749611a88565b5b60208301925060018202360383131561176657611765611a9c565b5b509250929050565b6000823560016101800383360303811261178b5761178a611a92565b5b80830191505092915050565b60006117a16117b2565b90506117ad8282611949565b919050565b6000604051905090565b600067ffffffffffffffff8211156117d7576117d6611a4f565b5b6117e082611ab0565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611857826118f0565b9150611862836118f0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611897576118966119f1565b5b828201905092915050565b60006118ad826118d0565b9050919050565b60006118bf826118d0565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b83811015611934578082015181840152602081019050611919565b83811115611943576000848401525b50505050565b61195282611ab0565b810181811067ffffffffffffffff8211171561197157611970611a4f565b5b80604052505050565b6000611985826118f0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156119b8576119b76119f1565b5b600182019050919050565b60006119ce826119df565b9050919050565b6000819050919050565b60006119ea82611ac1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b7f46756e6374696f6e2063616c6c206e6f74207375636365737366756c00000000600082015250565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b7f4e61746976654d6574615472616e73616374696f6e3a20494e56414c49445f5360008201527f49474e4552000000000000000000000000000000000000000000000000000000602082015250565b7f5369676e657220616e64207369676e617475726520646f206e6f74206d61746360008201527f6800000000000000000000000000000000000000000000000000000000000000602082015250565b611bc7816118a2565b8114611bd257600080fd5b50565b611bde816118c6565b8114611be957600080fd5b50565b611bf5816118fa565b8114611c0057600080fd5b5056fe4d6574615472616e73616374696f6e2875696e74323536206e6f6e63652c616464726573732066726f6d2c62797465732066756e6374696f6e5369676e617475726529a264697066735822122069f9e405d19371fed2060cb66e5c843e30b2a9c7739dba46c4aa94c95c369efd64736f6c63430008070033";

type BatchCreateConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BatchCreateConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BatchCreate__factory extends ContractFactory {
  constructor(...args: BatchCreateConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "BatchCreate";
  }

  deploy(
    _lucidBudgeteer: string,
    _lucidTx: string,
    _maxOperations: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BatchCreate> {
    return super.deploy(
      _lucidBudgeteer,
      _lucidTx,
      _maxOperations,
      overrides || {}
    ) as Promise<BatchCreate>;
  }
  getDeployTransaction(
    _lucidBudgeteer: string,
    _lucidTx: string,
    _maxOperations: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _lucidBudgeteer,
      _lucidTx,
      _maxOperations,
      overrides || {}
    );
  }
  attach(address: string): BatchCreate {
    return super.attach(address) as BatchCreate;
  }
  connect(signer: Signer): BatchCreate__factory {
    return super.connect(signer) as BatchCreate__factory;
  }
  static readonly contractName: "BatchCreate";
  public readonly contractName: "BatchCreate";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BatchCreateInterface {
    return new utils.Interface(_abi) as BatchCreateInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BatchCreate {
    return new Contract(address, _abi, signerOrProvider) as BatchCreate;
  }
}
