/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LucidManager, LucidManagerInterface } from "../LucidManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_description",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_proposal",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "_collectionAddress",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_feeBasisPoints",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "NotContractOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ValueMustBeGreaterThanZero",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "lucidManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "prevCollector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newCollector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blocktime",
        type: "uint256",
      },
    ],
    name: "CollectorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "lucidManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "prevFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blocktime",
        type: "uint256",
      },
    ],
    name: "FeeChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "lucidManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "prevFeeThreshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newFeeThreshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blocktime",
        type: "uint256",
      },
    ],
    name: "FeeThresholdChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "lucidManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "prevLucidToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newLucidToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blocktime",
        type: "uint256",
      },
    ],
    name: "LucidTokenChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "relayerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
    ],
    name: "MetaTransactionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "lucidManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "prevOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blocktime",
        type: "uint256",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "lucidManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "prevFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blocktime",
        type: "uint256",
      },
    ],
    name: "ReducedFeeChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "ERC712_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "sigR",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sigS",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "sigV",
        type: "uint8",
      },
    ],
    name: "executeMetaTransaction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeInfo",
    outputs: [
      {
        internalType: "address",
        name: "collectionAddress",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "feeBasisPoints",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "lucidTokenThreshold",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "reducedFeeBasisPoints",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDomainSeperator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_holder",
        type: "address",
      },
    ],
    name: "getFeeInfo",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_holder",
        type: "address",
      },
    ],
    name: "getLucidBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_holder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "paymentAmount",
        type: "uint256",
      },
    ],
    name: "getTransactionFee",
    outputs: [
      {
        internalType: "address",
        name: "sendFeesTo",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "transactionFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lucidToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposal",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_collectionAddress",
        type: "address",
      },
    ],
    name: "setCollectionAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_feeBasisPoints",
        type: "uint32",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lucidTokenAddress",
        type: "address",
      },
    ],
    name: "setLucidTokenAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "reducedFeeBasisPoints",
        type: "uint32",
      },
    ],
    name: "setReducedFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_threshold",
        type: "uint32",
      },
    ],
    name: "setlucidThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620029b4380380620029b483398181016040528101906200003791906200032b565b620000476200021760201b60201c565b600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083608081815250508260a0818152505080600360000160146101000a81548163ffffffff021916908363ffffffff1602179055503073ffffffffffffffffffffffffffffffffffffffff167f920eb1bd59249cc14185b0425c1a4c2749475b15272cb9b73451656ad168e323600083426040516200014c939291906200046c565b60405180910390a23073ffffffffffffffffffffffffffffffffffffffff167f28fa443c78eecff2421a89aee0a09ea0d05ad6bb15491e6d8b46c24084bab01e60008442604051620001a193929190620003f2565b60405180910390a23073ffffffffffffffffffffffffffffffffffffffff167f39186e51606070376273fb5a61f17af17684b1c771b7c32a6ee725284d1a28e46000620001f36200021760201b60201c565b4260405162000205939291906200042f565b60405180910390a250505050620005cc565b60006200022e6200023360201b620014501760201c565b905090565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415620002df57600080368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509050600080369050905073ffffffffffffffffffffffffffffffffffffffff818301511692505050620002e3565b3390505b90565b600081519050620002f7816200057e565b92915050565b6000815190506200030e8162000598565b92915050565b6000815190506200032581620005b2565b92915050565b6000806000806080858703121562000348576200034762000579565b5b60006200035887828801620002fd565b94505060206200036b87828801620002fd565b93505060406200037e87828801620002e6565b9250506060620003918782880162000314565b91505092959194509250565b620003a88162000515565b82525050565b620003b981620004a9565b82525050565b620003ca8162000529565b82525050565b620003db81620004fb565b82525050565b620003ec8162000565565b82525050565b6000606082019050620004096000830186620003ae565b6200041860208301856200039d565b620004276040830184620003d0565b949350505050565b6000606082019050620004466000830186620003ae565b620004556020830185620003ae565b620004646040830184620003d0565b949350505050565b6000606082019050620004836000830186620003bf565b620004926020830185620003e1565b620004a16040830184620003d0565b949350505050565b6000620004b682620004db565b9050919050565b6000620004ca82620004db565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600062000522826200053d565b9050919050565b60006200053682620004fb565b9050919050565b60006200054a8262000551565b9050919050565b60006200055e82620004db565b9050919050565b6000620005728262000505565b9050919050565b600080fd5b6200058981620004bd565b81146200059557600080fd5b50565b620005a381620004d1565b8114620005af57600080fd5b50565b620005bd8162000505565b8114620005c957600080fd5b50565b60805160a0516123c2620005f26000396000610ef701526000610e1201526123c26000f3fe6080604052600436106101145760003560e01c80636bb99452116100a05780638da5cb5b116100645780638da5cb5b146103ba578063995b5aae146103e5578063a6904aa514610413578063edd1b77f1461043c578063f10a31791461046757610114565b80636bb99452146102bf5780637284e416146102fd5780637439459b14610328578063753ec103146103665780637e0130c71461039157610114565b806320379ee5116100e757806320379ee5146101c65780632d0335ab146101f15780633408e4701461022e57806362b8389214610259578063695174b31461029657610114565b80630c53c51c146101195780630f7e59701461014957806313af4035146101745780631ab971ab1461019d575b600080fd5b610133600480360381019061012e91906117eb565b610490565b6040516101409190611d0a565b60405180910390f35b34801561015557600080fd5b5061015e610702565b60405161016b9190611d47565b60405180910390f35b34801561018057600080fd5b5061019b600480360381019061019691906117be565b61073b565b005b3480156101a957600080fd5b506101c460048036038101906101bf91906118ef565b6108fa565b005b3480156101d257600080fd5b506101db610a84565b6040516101e89190611c65565b60405180910390f35b3480156101fd57600080fd5b50610218600480360381019061021391906117be565b610a8e565b6040516102259190611dc9565b60405180910390f35b34801561023a57600080fd5b50610243610ad7565b6040516102509190611dc9565b60405180910390f35b34801561026557600080fd5b50610280600480360381019061027b91906117be565b610ae4565b60405161028d9190611dc9565b60405180910390f35b3480156102a257600080fd5b506102bd60048036038101906102b891906117be565b610bfb565b005b3480156102cb57600080fd5b506102e660048036038101906102e19190611882565b610dba565b6040516102f4929190611bf7565b60405180910390f35b34801561030957600080fd5b50610312610e10565b60405161031f9190611c65565b60405180910390f35b34801561033457600080fd5b5061034f600480360381019061034a91906117be565b610e34565b60405161035d929190611de4565b60405180910390f35b34801561037257600080fd5b5061037b610ef5565b6040516103889190611c65565b60405180910390f35b34801561039d57600080fd5b506103b860048036038101906103b391906118ef565b610f19565b005b3480156103c657600080fd5b506103cf611047565b6040516103dc9190611b67565b60405180910390f35b3480156103f157600080fd5b506103fa61106d565b60405161040a9493929190611c20565b60405180910390f35b34801561041f57600080fd5b5061043a600480360381019061043591906117be565b6110db565b005b34801561044857600080fd5b506104516112a0565b60405161045e9190611d2c565b60405180910390f35b34801561047357600080fd5b5061048e600480360381019061048991906118ef565b6112c6565b005b606060006040518060600160405280600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018781525090506105138782878787611501565b610552576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054990611da9565b60405180910390fd5b6105a56001600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461160a90919063ffffffff16565b600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f5845892132946850460bff5a0083f71031bc5bf9aadcd40f1de79423eac9b10b87338860405161061b93929190611b82565b60405180910390a16000803073ffffffffffffffffffffffffffffffffffffffff16888a604051602001610650929190611b08565b60405160208183030381529060405260405161066c9190611af1565b6000604051808303816000865af19150503d80600081146106a9576040519150601f19603f3d011682016040523d82523d6000602084013e6106ae565b606091505b5091509150816106f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ea90611d69565b60405180910390fd5b80935050505095945050505050565b6040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525081565b610743611620565b73ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107db5761079f611620565b6040517f2ef4875e0000000000000000000000000000000000000000000000000000000081526004016107d29190611b67565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610842576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503073ffffffffffffffffffffffffffffffffffffffff167f39186e51606070376273fb5a61f17af17684b1c771b7c32a6ee725284d1a28e4600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683426040516108ef93929190611bc0565b60405180910390a250565b610902611620565b73ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461099a5761095e611620565b6040517f2ef4875e0000000000000000000000000000000000000000000000000000000081526004016109919190611b67565b60405180910390fd5b60008163ffffffff1614156109db576040517f8565fcfe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360000160149054906101000a900463ffffffff16905081600360000160146101000a81548163ffffffff021916908363ffffffff1602179055503073ffffffffffffffffffffffffffffffffffffffff167f920eb1bd59249cc14185b0425c1a4c2749475b15272cb9b73451656ad168e32382600360000160149054906101000a900463ffffffff1642604051610a7893929190611e0d565b60405180910390a25050565b6000600154905090565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000804690508091505090565b600080600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610bed57600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b8152600401610b989190611b67565b60206040518083038186803b158015610bb057600080fd5b505afa158015610bc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be891906118c2565b610bf0565b60005b905080915050919050565b610c03611620565b73ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c9b57610c5f611620565b6040517f2ef4875e000000000000000000000000000000000000000000000000000000008152600401610c929190611b67565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d02576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503073ffffffffffffffffffffffffffffffffffffffff167f8c6af188365c24f235270cf18e6062c76ec688966602a2aff40b629c91d9c389600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168342604051610daf93929190611bc0565b60405180910390a250565b600080600080610dc986610e34565b9150915080935060008263ffffffff1611610de5576000610e05565b6127108263ffffffff1686610dfa9190611f6f565b610e049190611f3e565b5b925050509250929050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806000610e4284610ae4565b9050600080600360000160189054906101000a900463ffffffff1663ffffffff16118015610e8b5750600360000160189054906101000a900463ffffffff1663ffffffff168210155b610eaa57600360000160149054906101000a900463ffffffff16610ec1565b6003600001601c9054906101000a900463ffffffff165b905080600360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16935093505050915091565b7f000000000000000000000000000000000000000000000000000000000000000081565b610f21611620565b73ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610fb957610f7d611620565b6040517f2ef4875e000000000000000000000000000000000000000000000000000000008152600401610fb09190611b67565b60405180910390fd5b80600360000160186101000a81548163ffffffff021916908363ffffffff1602179055503073ffffffffffffffffffffffffffffffffffffffff167f1288d38590ededfeff607d9a0d70a08db1ef3baa2414283868ae007c582fab1d600360000160189054906101000a900463ffffffff16834260405161103c93929190611e0d565b60405180910390a250565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60038060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900463ffffffff16908060000160189054906101000a900463ffffffff169080600001601c9054906101000a900463ffffffff16905084565b6110e3611620565b73ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461117b5761113f611620565b6040517f2ef4875e0000000000000000000000000000000000000000000000000000000081526004016111729190611b67565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156111e2576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600360000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503073ffffffffffffffffffffffffffffffffffffffff167f28fa443c78eecff2421a89aee0a09ea0d05ad6bb15491e6d8b46c24084bab01e600360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16834260405161129593929190611bc0565b60405180910390a250565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6112ce611620565b73ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146113665761132a611620565b6040517f2ef4875e00000000000000000000000000000000000000000000000000000000815260040161135d9190611b67565b60405180910390fd5b60008163ffffffff1614156113a7576040517f8565fcfe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006003600001601c9054906101000a900463ffffffff169050816003600001601c6101000a81548163ffffffff021916908363ffffffff1602179055503073ffffffffffffffffffffffffffffffffffffffff167f920eb1bd59249cc14185b0425c1a4c2749475b15272cb9b73451656ad168e32382600360000160149054906101000a900463ffffffff164260405161144493929190611e0d565b60405180910390a25050565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156114fa57600080368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509050600080369050905073ffffffffffffffffffffffffffffffffffffffff8183015116925050506114fe565b3390505b90565b60008073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415611572576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161156990611d89565b60405180910390fd5b60016115856115808761162f565b611697565b838686604051600081526020016040526040516115a59493929190611cc5565b6020604051602081039080840390855afa1580156115c7573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614905095945050505050565b600081836116189190611ee8565b905092915050565b600061162a611450565b905090565b600060405180608001604052806043815260200161234a60439139805190602001208260000151836020015184604001518051906020012060405160200161167a9493929190611c80565b604051602081830303815290604052805190602001209050919050565b60006116a1610a84565b826040516020016116b3929190611b30565b604051602081830303815290604052805190602001209050919050565b60006116e36116de84611e69565b611e44565b9050828152602081018484840111156116ff576116fe6121b9565b5b61170a848285612086565b509392505050565b600081359050611721816122d6565b92915050565b600081359050611736816122ed565b92915050565b600082601f830112611751576117506121b4565b5b81356117618482602086016116d0565b91505092915050565b60008135905061177981612304565b92915050565b60008151905061178e81612304565b92915050565b6000813590506117a38161231b565b92915050565b6000813590506117b881612332565b92915050565b6000602082840312156117d4576117d36121c3565b5b60006117e284828501611712565b91505092915050565b600080600080600060a08688031215611807576118066121c3565b5b600061181588828901611712565b955050602086013567ffffffffffffffff811115611836576118356121be565b5b6118428882890161173c565b945050604061185388828901611727565b935050606061186488828901611727565b9250506080611875888289016117a9565b9150509295509295909350565b60008060408385031215611899576118986121c3565b5b60006118a785828601611712565b92505060206118b88582860161176a565b9150509250929050565b6000602082840312156118d8576118d76121c3565b5b60006118e68482850161177f565b91505092915050565b600060208284031215611905576119046121c3565b5b600061191384828501611794565b91505092915050565b61192581611fdb565b82525050565b61193481611fc9565b82525050565b61194b61194682611fc9565b6120f9565b82525050565b61195a81611fed565b82525050565b61197161196c82611fed565b61210b565b82525050565b600061198282611e9a565b61198c8185611eb0565b935061199c818560208601612095565b6119a5816121c8565b840191505092915050565b60006119bb82611e9a565b6119c58185611ec1565b93506119d5818560208601612095565b80840191505092915050565b6119ea8161203e565b82525050565b60006119fb82611ea5565b611a058185611ecc565b9350611a15818560208601612095565b611a1e816121c8565b840191505092915050565b6000611a36601c83611ecc565b9150611a41826121e6565b602082019050919050565b6000611a59600283611edd565b9150611a648261220f565b600282019050919050565b6000611a7c602583611ecc565b9150611a8782612238565b604082019050919050565b6000611a9f602183611ecc565b9150611aaa82612287565b604082019050919050565b611abe81612017565b82525050565b611acd81612074565b82525050565b611adc81612021565b82525050565b611aeb81612031565b82525050565b6000611afd82846119b0565b915081905092915050565b6000611b1482856119b0565b9150611b20828461193a565b6014820191508190509392505050565b6000611b3b82611a4c565b9150611b478285611960565b602082019150611b578284611960565b6020820191508190509392505050565b6000602082019050611b7c600083018461192b565b92915050565b6000606082019050611b97600083018661192b565b611ba4602083018561191c565b8181036040830152611bb68184611977565b9050949350505050565b6000606082019050611bd5600083018661192b565b611be2602083018561192b565b611bef6040830184611ab5565b949350505050565b6000604082019050611c0c600083018561192b565b611c196020830184611ab5565b9392505050565b6000608082019050611c35600083018761192b565b611c426020830186611ad3565b611c4f6040830185611ad3565b611c5c6060830184611ad3565b95945050505050565b6000602082019050611c7a6000830184611951565b92915050565b6000608082019050611c956000830187611951565b611ca26020830186611ab5565b611caf604083018561192b565b611cbc6060830184611951565b95945050505050565b6000608082019050611cda6000830187611951565b611ce76020830186611ae2565b611cf46040830185611951565b611d016060830184611951565b95945050505050565b60006020820190508181036000830152611d248184611977565b905092915050565b6000602082019050611d4160008301846119e1565b92915050565b60006020820190508181036000830152611d6181846119f0565b905092915050565b60006020820190508181036000830152611d8281611a29565b9050919050565b60006020820190508181036000830152611da281611a6f565b9050919050565b60006020820190508181036000830152611dc281611a92565b9050919050565b6000602082019050611dde6000830184611ab5565b92915050565b6000604082019050611df96000830185611ad3565b611e06602083018461192b565b9392505050565b6000606082019050611e226000830186611ac4565b611e2f6020830185611ac4565b611e3c6040830184611ab5565b949350505050565b6000611e4e611e5f565b9050611e5a82826120c8565b919050565b6000604051905090565b600067ffffffffffffffff821115611e8457611e83612185565b5b611e8d826121c8565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b6000611ef382612017565b9150611efe83612017565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611f3357611f32612127565b5b828201905092915050565b6000611f4982612017565b9150611f5483612017565b925082611f6457611f63612156565b5b828204905092915050565b6000611f7a82612017565b9150611f8583612017565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611fbe57611fbd612127565b5b828202905092915050565b6000611fd482611ff7565b9050919050565b6000611fe682611ff7565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600060ff82169050919050565b600061204982612050565b9050919050565b600061205b82612062565b9050919050565b600061206d82611ff7565b9050919050565b600061207f82612021565b9050919050565b82818337600083830152505050565b60005b838110156120b3578082015181840152602081019050612098565b838111156120c2576000848401525b50505050565b6120d1826121c8565b810181811067ffffffffffffffff821117156120f0576120ef612185565b5b80604052505050565b600061210482612115565b9050919050565b6000819050919050565b6000612120826121d9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b7f46756e6374696f6e2063616c6c206e6f74207375636365737366756c00000000600082015250565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b7f4e61746976654d6574615472616e73616374696f6e3a20494e56414c49445f5360008201527f49474e4552000000000000000000000000000000000000000000000000000000602082015250565b7f5369676e657220616e64207369676e617475726520646f206e6f74206d61746360008201527f6800000000000000000000000000000000000000000000000000000000000000602082015250565b6122df81611fc9565b81146122ea57600080fd5b50565b6122f681611fed565b811461230157600080fd5b50565b61230d81612017565b811461231857600080fd5b50565b61232481612021565b811461232f57600080fd5b50565b61233b81612031565b811461234657600080fd5b5056fe4d6574615472616e73616374696f6e2875696e74323536206e6f6e63652c616464726573732066726f6d2c62797465732066756e6374696f6e5369676e617475726529a2646970667358221220ff0a4e0884cbf961487ad1da513af36f031ff972197f49f5505bd02444a2676464736f6c63430008070033";

type LucidManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LucidManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LucidManager__factory extends ContractFactory {
  constructor(...args: LucidManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "LucidManager";
  }

  deploy(
    _description: BytesLike,
    _proposal: BytesLike,
    _collectionAddress: string,
    _feeBasisPoints: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LucidManager> {
    return super.deploy(
      _description,
      _proposal,
      _collectionAddress,
      _feeBasisPoints,
      overrides || {}
    ) as Promise<LucidManager>;
  }
  getDeployTransaction(
    _description: BytesLike,
    _proposal: BytesLike,
    _collectionAddress: string,
    _feeBasisPoints: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _description,
      _proposal,
      _collectionAddress,
      _feeBasisPoints,
      overrides || {}
    );
  }
  attach(address: string): LucidManager {
    return super.attach(address) as LucidManager;
  }
  connect(signer: Signer): LucidManager__factory {
    return super.connect(signer) as LucidManager__factory;
  }
  static readonly contractName: "LucidManager";
  public readonly contractName: "LucidManager";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LucidManagerInterface {
    return new utils.Interface(_abi) as LucidManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LucidManager {
    return new Contract(address, _abi, signerOrProvider) as LucidManager;
  }
}
