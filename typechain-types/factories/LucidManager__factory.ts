/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LucidManager, LucidManagerInterface } from "../LucidManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_description",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "_collectionAddress",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_feeBasisPoints",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "NotContractOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ValueMustBeGreaterThanZero",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "lucidManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "prevCollector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newCollector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blocktime",
        type: "uint256",
      },
    ],
    name: "CollectorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "lucidManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "prevFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blocktime",
        type: "uint256",
      },
    ],
    name: "FeeChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "lucidManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "prevFeeThreshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newFeeThreshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blocktime",
        type: "uint256",
      },
    ],
    name: "FeeThresholdChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "lucidManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "prevLucidToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newLucidToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blocktime",
        type: "uint256",
      },
    ],
    name: "LucidTokenChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "lucidManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "prevOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blocktime",
        type: "uint256",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "lucidManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "prevFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blocktime",
        type: "uint256",
      },
    ],
    name: "ReducedFeeChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeInfo",
    outputs: [
      {
        internalType: "address",
        name: "collectionAddress",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "feeBasisPoints",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "lucidTokenThreshold",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "reducedFeeBasisPoints",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_holder",
        type: "address",
      },
    ],
    name: "getFeeInfo",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_holder",
        type: "address",
      },
    ],
    name: "getLucidBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_holder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "paymentAmount",
        type: "uint256",
      },
    ],
    name: "getTransactionFee",
    outputs: [
      {
        internalType: "address",
        name: "sendFeesTo",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "transactionFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lucidToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_collectionAddress",
        type: "address",
      },
    ],
    name: "setCollectionAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_feeBasisPoints",
        type: "uint32",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lucidTokenAddress",
        type: "address",
      },
    ],
    name: "setLucidTokenAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "reducedFeeBasisPoints",
        type: "uint32",
      },
    ],
    name: "setReducedFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_threshold",
        type: "uint32",
      },
    ],
    name: "setlucidThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200187e3803806200187e833981810160405281019062000037919062000233565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260808181525050806000800160146101000a81548163ffffffff021916908363ffffffff1602179055503073ffffffffffffffffffffffffffffffffffffffff167f920eb1bd59249cc14185b0425c1a4c2749475b15272cb9b73451656ad168e3236000834260405162000133939291906200035e565b60405180910390a23073ffffffffffffffffffffffffffffffffffffffff167f28fa443c78eecff2421a89aee0a09ea0d05ad6bb15491e6d8b46c24084bab01e600084426040516200018893929190620002e4565b60405180910390a23073ffffffffffffffffffffffffffffffffffffffff167f39186e51606070376273fb5a61f17af17684b1c771b7c32a6ee725284d1a28e460003342604051620001dd9392919062000321565b60405180910390a2505050620004be565b600081519050620001ff8162000470565b92915050565b60008151905062000216816200048a565b92915050565b6000815190506200022d81620004a4565b92915050565b6000806000606084860312156200024f576200024e6200046b565b5b60006200025f8682870162000205565b93505060206200027286828701620001ee565b925050604062000285868287016200021c565b9150509250925092565b6200029a8162000407565b82525050565b620002ab816200039b565b82525050565b620002bc816200041b565b82525050565b620002cd81620003ed565b82525050565b620002de8162000457565b82525050565b6000606082019050620002fb6000830186620002a0565b6200030a60208301856200028f565b620003196040830184620002c2565b949350505050565b6000606082019050620003386000830186620002a0565b620003476020830185620002a0565b620003566040830184620002c2565b949350505050565b6000606082019050620003756000830186620002b1565b620003846020830185620002d3565b620003936040830184620002c2565b949350505050565b6000620003a882620003cd565b9050919050565b6000620003bc82620003cd565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600062000414826200042f565b9050919050565b60006200042882620003ed565b9050919050565b60006200043c8262000443565b9050919050565b60006200045082620003cd565b9050919050565b60006200046482620003f7565b9050919050565b600080fd5b6200047b81620003af565b81146200048757600080fd5b50565b6200049581620003c3565b8114620004a157600080fd5b50565b620004af81620003f7565b8114620004bb57600080fd5b50565b6080516113a4620004da60003960006108d301526113a46000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80637439459b1161008c578063995b5aae11610066578063995b5aae14610212578063a6904aa514610233578063edd1b77f1461024f578063f10a31791461026d576100cf565b80637439459b146101a75780637e0130c7146101d85780638da5cb5b146101f4576100cf565b806313af4035146100d45780631ab971ab146100f057806362b838921461010c578063695174b31461013c5780636bb99452146101585780637284e41614610189575b600080fd5b6100ee60048036038101906100e99190610f0b565b610289565b005b61010a60048036038101906101059190610fa5565b61043a565b005b61012660048036038101906101219190610f0b565b6105b3565b6040516101339190611122565b60405180910390f35b61015660048036038101906101519190610f0b565b6106ca565b005b610172600480360381019061016d9190610f38565b61087b565b60405161018092919061107e565b60405180910390f35b6101916108d1565b60405161019e91906110ec565b60405180910390f35b6101c160048036038101906101bc9190610f0b565b6108f5565b6040516101cf92919061113d565b60405180910390f35b6101f260048036038101906101ed9190610fa5565b6109b1565b005b6101fc610acf565b604051610209919061102c565b60405180910390f35b61021a610af5565b60405161022a94939291906110a7565b60405180910390f35b61024d60048036038101906102489190610f0b565b610b63565b005b610257610d18565b6040516102649190611107565b60405180910390f35b61028760048036038101906102829190610fa5565b610d3e565b005b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461031b57336040517f2ef4875e000000000000000000000000000000000000000000000000000000008152600401610312919061102c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610382576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503073ffffffffffffffffffffffffffffffffffffffff167f39186e51606070376273fb5a61f17af17684b1c771b7c32a6ee725284d1a28e4600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16834260405161042f93929190611047565b60405180910390a250565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104cc57336040517f2ef4875e0000000000000000000000000000000000000000000000000000000081526004016104c3919061102c565b60405180910390fd5b60008163ffffffff16141561050d576040517f8565fcfe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060000160149054906101000a900463ffffffff169050816000800160146101000a81548163ffffffff021916908363ffffffff1602179055503073ffffffffffffffffffffffffffffffffffffffff167f920eb1bd59249cc14185b0425c1a4c2749475b15272cb9b73451656ad168e323826000800160149054906101000a900463ffffffff16426040516105a793929190611166565b60405180910390a25050565b600080600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106bc57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b8152600401610667919061102c565b60206040518083038186803b15801561067f57600080fd5b505afa158015610693573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b79190610f78565b6106bf565b60005b905080915050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461075c57336040517f2ef4875e000000000000000000000000000000000000000000000000000000008152600401610753919061102c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107c3576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503073ffffffffffffffffffffffffffffffffffffffff167f8c6af188365c24f235270cf18e6062c76ec688966602a2aff40b629c91d9c389600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16834260405161087093929190611047565b60405180910390a250565b60008060008061088a866108f5565b9150915080935060008263ffffffff16116108a65760006108c6565b6127108263ffffffff16866108bb91906111ce565b6108c5919061119d565b5b925050509250929050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806000610903846105b3565b90506000806000800160189054906101000a900463ffffffff1663ffffffff1611801561094a57506000800160189054906101000a900463ffffffff1663ffffffff168210155b610968576000800160149054906101000a900463ffffffff1661097e565b60008001601c9054906101000a900463ffffffff165b9050806000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16935093505050915091565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a4357336040517f2ef4875e000000000000000000000000000000000000000000000000000000008152600401610a3a919061102c565b60405180910390fd5b806000800160186101000a81548163ffffffff021916908363ffffffff1602179055503073ffffffffffffffffffffffffffffffffffffffff167f1288d38590ededfeff607d9a0d70a08db1ef3baa2414283868ae007c582fab1d6000800160189054906101000a900463ffffffff168342604051610ac493929190611166565b60405180910390a250565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900463ffffffff16908060000160189054906101000a900463ffffffff169080600001601c9054906101000a900463ffffffff16905084565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610bf557336040517f2ef4875e000000000000000000000000000000000000000000000000000000008152600401610bec919061102c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c5c576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503073ffffffffffffffffffffffffffffffffffffffff167f28fa443c78eecff2421a89aee0a09ea0d05ad6bb15491e6d8b46c24084bab01e6000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168342604051610d0d93929190611047565b60405180910390a250565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610dd057336040517f2ef4875e000000000000000000000000000000000000000000000000000000008152600401610dc7919061102c565b60405180910390fd5b60008163ffffffff161415610e11576040517f8565fcfe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080600001601c9054906101000a900463ffffffff1690508160008001601c6101000a81548163ffffffff021916908363ffffffff1602179055503073ffffffffffffffffffffffffffffffffffffffff167f920eb1bd59249cc14185b0425c1a4c2749475b15272cb9b73451656ad168e323826000800160149054906101000a900463ffffffff1642604051610eab93929190611166565b60405180910390a25050565b600081359050610ec681611329565b92915050565b600081359050610edb81611340565b92915050565b600081519050610ef081611340565b92915050565b600081359050610f0581611357565b92915050565b600060208284031215610f2157610f20611324565b5b6000610f2f84828501610eb7565b91505092915050565b60008060408385031215610f4f57610f4e611324565b5b6000610f5d85828601610eb7565b9250506020610f6e85828601610ecc565b9150509250929050565b600060208284031215610f8e57610f8d611324565b5b6000610f9c84828501610ee1565b91505092915050565b600060208284031215610fbb57610fba611324565b5b6000610fc984828501610ef6565b91505092915050565b610fdb81611228565b82525050565b610fea8161123a565b82525050565b610ff98161127e565b82525050565b61100881611264565b82525050565b611017816112b4565b82525050565b6110268161126e565b82525050565b60006020820190506110416000830184610fd2565b92915050565b600060608201905061105c6000830186610fd2565b6110696020830185610fd2565b6110766040830184610fff565b949350505050565b60006040820190506110936000830185610fd2565b6110a06020830184610fff565b9392505050565b60006080820190506110bc6000830187610fd2565b6110c9602083018661101d565b6110d6604083018561101d565b6110e3606083018461101d565b95945050505050565b60006020820190506111016000830184610fe1565b92915050565b600060208201905061111c6000830184610ff0565b92915050565b60006020820190506111376000830184610fff565b92915050565b6000604082019050611152600083018561101d565b61115f6020830184610fd2565b9392505050565b600060608201905061117b600083018661100e565b611188602083018561100e565b6111956040830184610fff565b949350505050565b60006111a882611264565b91506111b383611264565b9250826111c3576111c26112f5565b5b828204905092915050565b60006111d982611264565b91506111e483611264565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561121d5761121c6112c6565b5b828202905092915050565b600061123382611244565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600061128982611290565b9050919050565b600061129b826112a2565b9050919050565b60006112ad82611244565b9050919050565b60006112bf8261126e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b61133281611228565b811461133d57600080fd5b50565b61134981611264565b811461135457600080fd5b50565b6113608161126e565b811461136b57600080fd5b5056fea2646970667358221220fd3132f9124e393aef5b61066fe8c69f333453e564bc07d60673dcd1a6966c0864736f6c63430008070033";

type LucidManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LucidManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LucidManager__factory extends ContractFactory {
  constructor(...args: LucidManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "LucidManager";
  }

  deploy(
    _description: BytesLike,
    _collectionAddress: string,
    _feeBasisPoints: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LucidManager> {
    return super.deploy(
      _description,
      _collectionAddress,
      _feeBasisPoints,
      overrides || {}
    ) as Promise<LucidManager>;
  }
  getDeployTransaction(
    _description: BytesLike,
    _collectionAddress: string,
    _feeBasisPoints: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _description,
      _collectionAddress,
      _feeBasisPoints,
      overrides || {}
    );
  }
  attach(address: string): LucidManager {
    return super.attach(address) as LucidManager;
  }
  connect(signer: Signer): LucidManager__factory {
    return super.connect(signer) as LucidManager__factory;
  }
  static readonly contractName: "LucidManager";
  public readonly contractName: "LucidManager";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LucidManagerInterface {
    return new utils.Interface(_abi) as LucidManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LucidManager {
    return new Contract(address, _abi, signerOrProvider) as LucidManager;
  }
}
